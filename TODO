https://www.opengl.org/discussion_boards/showthread.php/177944-Deferred-Shading-Performance-Problems


IMPORTANT:
http://gamedevs.org/uploads/deferred-shading-tutorial.pdf

DEPTH BUFFER COPY:
http://stackoverflow.com/questions/9914046/opengl-how-to-use-depthbuffer-from-framebuffer-as-usual-depth-buffer

deferred TODO:
fix water
fix env map.
fix particle system shading.
fix light sources.
fix so that you can place light sources.

ao TODO:
ao for trees:
http://www-sop.inria.fr/reves/Basilic/2006/HPAD06/HPAD06.pdf


heightmap reference:
https://www.youtube.com/watch?v=j4CE7G4TOyI
https://www.youtube.com/watch?v=q4B0cTgqXtw

implement scaling matrix support
output_id and output_depth shader should be the same for all geoObjs,
for better performance.

Main features:
* Environment mapping.(then water reflection. )
http://ivanleben.blogspot.se/2008/03/water-reflections-with-opengl.html
http://khayyam.kaplinski.com/2011/09/reflective-water-with-glsl-part-i.html

* deferred shading.
http://www.codinglabs.net/tutorial_opengl_deferred_rendering_shadow_mapping.aspx
http://stackoverflow.com/questions/27461958/shadow-mapping-with-a-deferred-rendering

http://users.csc.calpoly.edu/~zwood/teaching/csc572/final11/rschmitt/

* SSAO
http://www.iquilezles.org/www/articles/ssao/ssao.htm
http://www.iquilezles.org/www/articles/multiresaocc/multiresaocc.htm
file:///Users/eric/Dropbox/reports/DATx02-14-20.pdf
http://www.cise.ufl.edu/~cchi/SSAO.pdf
http://amd-dev.wpengine.netdna-cdn.com/wordpress/media/2013/01/Chapter05-Filion-StarCraftII.pdf
http://saplin.blogspot.se/2012/01/bilateral-image-filter-edge-preserving.html
http://www.gamedev.net/topic/631378-bilateral-gaussian-blur/
http://stackoverflow.com/questions/6538310/anyone-know-where-i-can-find-a-glsl-implementation-of-a-bilateral-filter-blur
https://en.wikipedia.org/wiki/Bilateral_filter
http://john-chapman-graphics.blogspot.se/2013/01/ssao-tutorial.html
https://mtnphil.wordpress.com/2013/06/26/know-your-ssao-artifacts/

* reconstructing depth:
https://mynameismjp.wordpress.com/2009/03/10/reconstructing-position-from-depth/
https://mynameismjp.wordpress.com/2010/09/05/position-from-depth-3/
https://mynameismjp.wordpress.com/2010/09/05/position-from-depth-3/
http://www.mvps.org/directx/articles/linear_z/linearz.htm
http://www.gamedev.net/topic/526330-linear-depth-buffer-question/
http://stackoverflow.com/questions/22295120/deferred-rendering-with-opengl-experiencing-heavy-pixelization-near-lit-boundar
http://users.csc.calpoly.edu/~zwood/teaching/csc572/final11/rschmitt/

* particle system.

https://www.youtube.com/watch?v=JEiKX_xXTVQ

* geo clipmapping
http://malideveloper.arm.com/resources/sample-code/terrain-rendering-with-geometry-clipmaps/

* some kind of spartial data structure, potentially.
* shadows.
* road rendering.

see
Torque3D-development/Engine/source/environment/decalRoad.cpp
search for spline.

http://www.gamedev.net/topic/629976-tips-for-programming-a-road-building-tool/

* Vegetation map.
http://www.gamedev.net/topic/645080-good-way-to-manage-grass-rendering/
http://www.kevinboulanger.net/grass.html
http://outerra.blogspot.se/2012/05/procedural-grass-rendering.html
https://upvoid.com/devblog/2013/02/prototype-grass/


from torque!!!!! very important!
///////////////////////////////////////////////////////////////////////////////
// The following wind effect was derived from the GPU Gems 3 chapter...
//
// "Vegetation Procedural Animation and Shading in Crysis"
// by Tiago Sousa, Crytek
//



* fix better terrain grid:
http://graphics.cs.brown.edu/games/IsoHeightfield/mcguiresibley04iso.pdf


tree
torch.
traffic sign.

make rock texture:
file:///Users/eric/Downloads/Blender%202.6%20Cycles-%20Materials%20and%20Textures%20Cookbook.pdf

code is in
~/cookbook_codes

* target polygon count:
10000 is way too many.
3000 can be fine depending on the model. if it is a complex model.

also, texture sizes should be 256x256 to 512x512

https://forum.beyond3d.com/threads/yes-but-how-many-polygons-an-artist-blog-entry-with-interesting-numbers.39321/
http://www.gameartisans.org/forums/threads/23520-Historical-Poly-Counts
http://www.rsart.co.uk/2007/08/27/yes-but-how-many-polygons/

Race Game:
Environment map on car.
https://github.com/stuntrally/stuntrally/blob/8d78b7a7e4addbeccf4ea4a81f28b4f5f338dfcb/source/ogre/CarReflection.cpp

fire particle effect out pipe at back.
particle effect at goal to mark the goal.
use railings to make sure car is in track.
sparkles fly when you land?

http://docs.nvidia.com/gameworks/content/gameworkslibrary/graphicssamples/opengl_samples/feedbackparticlessample.htm

* rain effect
* snow effect.
https://www.youtube.com/watch?v=r1CT9wTQiwc
*water

Todo:
* gaussian filter.
* bloom?
* SSAO
* god rays?
* environment mapping.
* car camera movement.
* make level editor
https://www.youtube.com/watch?v=QaXFpVu5YEw
https://www.youtube.com/watch?v=U7zJ1Ai8YAo
Some basic algorithms(like lightning and such) in
Focus on 3D Terrain Programming
https://github.com/SonyWWS/LevelEditor

http://stackoverflow.com/a/21034664
https://github.com/forexample/cocoa-app
* implement geometry clipmapping
* efficient view frustum culling(hierarchy, )
* road drawing.
* lod models.
http://www.gamedev.net/topic/652777-geometry-clipmaps-terrain-tutorial-with-source/
* physic
* shadow mapping.
* water rendering
* Deferred rendering.

http://gamedevs.org/uploads/deferred-shading-tutorial.pdf
http://www.cse.chalmers.se/edu/year/2011/course/TDA361/Advanced%20Computer%20Graphics/deferredshading2012.pdf
http://www.cse.chalmers.se/edu/year/2011/course/TDA361/Advanced%20Computer%20Graphics/DeferredRenderingPresentation.pdf
ftp://download.nvidia.com/developer/presentations/2004/6800_Leagues/6800_Leagues_Deferred_Shading.pdf
using four framebuffers:

fbo1: normal.x normal.y normal.z empty
fbo2: diffuse.r diffuse.g diffuse.b empty
fbo3: specular.r specular.g specular.b shininess
depth buffer: depth
with 16-bits float for each channel.

* Make better unit testing framework.
* make program for converting shader to png texture.
* make better clouds. See here for inspiration: https://www.shadertoy.com/view/XlSSRd
* implement precomputed radiance transfer for prebaked global illuminatin


links:

glsl worley and perlin
http://drilian.com/2007/10/27/jpeg-buoys-amidst-a-sea-of-text/


valve graphics
http://www.valvesoftware.com/publications/2006/SIGGRAPH06_Course_ShadingInValvesSourceEngine.pdf


spatial data structures.
http://gamedev.stackexchange.com/questions/5493/whats-the-state-of-the-art-in-space-partitioning-for-games



* detail textures to improve the grass texture.
http://blogs.msdn.com/b/shawnhar/archive/2008/11/03/detail-textures.aspx
https://developer.valvesoftware.com/wiki/$detail




* deferred rendering notes:

http://www.cse.chalmers.se/~uffe/bachelor/kandidatarbetestartpaket/DATx02-14-81.pdf
page 16 has a very nice formula!

emissive component, light calculation.

http://http.developer.nvidia.com/GPUGems2/gpugems2_chapter09.html

http://gamedev.stackexchange.com/questions/19575/is-there-a-way-to-use-an-arbitrary-number-of-lights-in-a-fragment-shader


to handle materials with multiple brdfs, store material id in buffer.


We don't need to store the position in a texture:

"The position is usually not stored. It is instead reconstituted in
the second pass by math that's too complex to get into here. Suffice
it to say, we use the depth buffer and the screen-space fragment
position as the input to figure out the camera-space position of the
point on a surface."

we want to render to four render targets. in total, we get 16 floating
point numbers to play around with!


* doom 3 map format:

http://doomwiki.org/wiki/Thing

doom3 map format:
http://web.archive.org/web/20080220062502/http://www.gamers.org/dEngine/quake/QDP/qmapspec.html

https://developer.valvesoftware.com/wiki/MAP_file_format
